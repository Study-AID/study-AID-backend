name: Run test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      checks: write
      pull-requests: write

    strategy:
      matrix:
        java-version: ['17']

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'adopt'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run tests
      run: make test

    - name: Generate coverage report
      run: make test-coverage

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: build/test-results/test/**/*.xml
        check_name: 'Test Results (${{ matrix.java-version }})'

    - name: Upload test report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-report-${{ matrix.java-version }}
        path: build/reports/tests/test/

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report-${{ matrix.java-version }}
        path: build/reports/jacoco/test/html/

    - name: Check test results
      if: always()
      run: |
        if [ -f build/test-results/test/TEST-*.xml ]; then
          echo "Test results found"
          cat build/test-results/test/TEST-*.xml | grep -E "tests=\"[0-9]+\" failures=\"[0-9]+\" errors=\"[0-9]+\""
        else
          echo "No test results found"
        fi

name: Prod - Deploy prod-summarize-lecture Lambda Job

on:
  push:
    tags:
      - 'deploy-job-summarize-lecture-[0-9]+.[0-9]+.[0-9]+'
      - '!deploy-job-summarize-lecture-*-dev'  # Exclude dev tags

env:
  LAMBDA_FUNCTION_NAME: prod-summarize-lecture
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: study-aid-lambda
  ECR_IMAGE_TAG: prod-summarize-lecture

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Create ECR repository if it doesn't exist
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY || \
            aws ecr create-repository --repository-name $ECR_REPOSITORY
          
          # Build the docker image using the Dockerfile in the function directory
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG -f jobs/summarize_lecture/Dockerfile .
          
          # Push the docker image
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG
          
          # Save the image URI
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$ECR_IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Update Lambda function
        run: |
          # Update the Lambda function to use the new container image
          aws lambda update-function-code \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --image-uri ${{ steps.build-image.outputs.image }}
          
          # Wait for the update to complete
          aws lambda wait function-updated \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }}

      - name: Get Lambda function info
        run: |
          aws lambda get-function \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --query 'Configuration.[FunctionArn, LastModified, Version]'

      - name: Tag deployment
        run: |
          # Get the git tag that triggered this deployment
          DEPLOY_TAG=${GITHUB_REF#refs/tags/}
          
          # Create a git tag for the deployment
          git config user.name github-actions
          git config user.email github-actions@github.com
          
          DEPLOYMENT_TAG="deployed-prod-${DEPLOY_TAG}-$(date +%Y%m%d-%H%M%S)"
          git tag -a $DEPLOYMENT_TAG -m "Production deployment of $DEPLOY_TAG"
          git push origin $DEPLOYMENT_TAG
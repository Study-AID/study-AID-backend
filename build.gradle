plugins {
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'jacoco'
}

group = 'com.study-aid'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    maven {
        name = 'Central Portal Snapshots'
        url = 'https://central.sonatype.com/repository/maven-snapshots/'
    }
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // PostgreSQL
    implementation 'org.postgresql:postgresql'

    // Redis (선택 사항)
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Swagger/OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    implementation platform("org.springframework.ai:spring-ai-bom:0.8.0")
    // implementation 'org.springframework.ai:spring-ai-starter-model-openai'
    implementation 'org.springframework.ai:spring-ai-openai'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Flyway for database migrations
    implementation 'org.flywaydb:flyway-core'

    // Test
    runtimeOnly 'com.h2database:h2:2.2.224'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()

    reports {
        html.required = true
    }

    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}

tasks.named('jacocoTestReport') {
    dependsOn tasks.test
    reports {
        xml.required = true
        html.required = true
    }
}

afterEvaluate {
    tasks.named('jacocoTestReport') {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/config/**",
                    "**/model/**"
            ])
        }))
    }
}

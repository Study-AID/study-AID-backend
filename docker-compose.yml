version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.local
    env_file:
      - .env
    container_name: api-server
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - rag-server
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: studyaid
      DB_USER: postgres
      DB_PASSWORD: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      RAG_SERVER_URL: http://rag-server:5000
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./:/app
      - gradle-cache:/root/.gradle

  rag:
    build:
      context: ./rag
      dockerfile: Dockerfile
    container_name: rag-server
    ports:
      - "5000:5000"
    volumes:
      - ./rag:/app
      - rag-data:/app/chroma_db
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: studyaid
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  flyway:
    image: flyway/flyway
    depends_on:
      - postgres
    volumes:
      - ./flyway/migrations:/flyway/migrations
      - ./flyway/flyway-local.conf:/flyway/conf/flyway.conf
    networks:
      - app-network
    profiles: ["migration"]

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  gradle-cache:
  rag-data:

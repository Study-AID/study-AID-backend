# Stage 1: Build stage
FROM gradle:8.3-jdk17-alpine AS build
WORKDIR /app

# Copy gradle configuration files and download dependencies (for better caching)
COPY gradlew build.gradle settings.gradle* gradle.properties* /app/
COPY gradle /app/gradle
RUN chmod +x ./gradlew
RUN ./gradlew dependencies --no-daemon

# Copy source code
COPY src /app/src

# Build the application
RUN ./gradlew bootJar -x test --no-daemon

# Stage 2: Runtime stage
FROM eclipse-temurin:17-jre-alpine
WORKDIR /app

# Add a non-root user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup
USER appuser

# JVM tuning options
ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/./urandom"

# Copy built artifact from the build stage
COPY --from=build --chown=appuser:appgroup /app/build/libs/*.jar app.jar

# Health check
HEALTHCHECK --interval=60s --timeout=5s --start-period=180s --retries=3 CMD wget --quiet --tries=1 --spider http://localhost:8080/api/v1/health || exit 1

# Expose application port
EXPOSE 8080

# Run the application
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]